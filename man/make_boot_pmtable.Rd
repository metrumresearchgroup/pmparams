% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_boot_pmtable.R
\name{make_boot_pmtable}
\alias{make_boot_pmtable}
\title{Make pmtable boot parameter table}
\usage{
make_boot_pmtable(.boot_df, .pmtype = "full", .width = 1, .nonboot_df = NULL)
}
\arguments{
\item{.boot_df}{bootstrap parameter data set output from pmparams::format_boot_table.}

\item{.pmtype}{parameter table type. Options include: full (all rows in .df retained in pmtable), fixed (all rows with type =
"Struct" or "effect"), structural (all rows with type = "Struct"), covariate (all rows with type = "effect"), random (all
rows with greek = "Omega" or type = "Resid"). Defaults to "full".}

\item{.width}{notes width. Defaults to 1.}

\item{.nonboot_df}{non-boot data set. If provided, this will be joined onto the bootstrap parameter estimates. Default is NULL.}
}
\description{
Generates specific parameter tables by filtering and using pmtables

This function:
\enumerate{
\item Filters to columns needed for specific parameter tables
\item Panels by "type"
\item Makes "abb", "greek", "desc" blank for "full", "fixed", "structural", "covariate" parameter tables.
Makes "abb" and "greek" blank for "random"
\item Attaches notes
\item Rename "value" to "Estimate" and "shrinkage" to "Shrinkage (\\\%)", if applicable
}

If these pmtable settings do not work for your parameter table, you can overwrite them afterwards using desired pmtables commands.
}
\examples{

#Using output from `format_boot_table` (defineOut),
bootEst <- utils::read.csv(system.file("model/nonmem/boot/data/boot-106.csv", package = "pmparams"))
paramKey <-  system.file("model/nonmem/pk-parameter-key-new.yaml", package = "pmparams")
defineOut <- define_boot_table(.boot_estimates = bootEst, .key = paramKey, .ci = 95)
data <- format_boot_table(.boot_df = defineOut)

#To make random effects table:

make_boot_pmtable(.boot_df = data, .pmtype = "random")

#To include non-bootstrap estimates:

paramPath <- system.file("model/nonmem/102", package = "pmparams")
defineOut_nonboot <- define_param_table(.estimates = paramPath, .key = paramKey, .ci = 95, .zscore = NULL)
data_nonboot <- format_param_table(defineOut_nonboot)

combine <- data_nonboot \%>\% left_join(data)
make_boot_pmtable(.boot_df = combine, .pmtype = "random")

}
