% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/define_boot_table.R
\name{define_boot_table}
\alias{define_boot_table}
\title{Combine bootstrap estimates with parameter key}
\usage{
define_boot_table(
  .boot_estimates,
  .key,
  .ci = 95,
  .percentiles = NULL,
  .na.rm = TRUE,
  .nonboot_estimates = NULL
)
}
\arguments{
\item{.boot_estimates}{parameter boot estimates- either path to file or data.frame}

\item{.key}{path to parameter key or data.frame of parameter key. Described in more detail in \code{\link[pmparams]{param_key}}}

\item{.ci}{specify 90 or 95 percent confidence interval or IQR (interquartile range). Default is 95.}

\item{.percentiles}{list of all percentiles. Default is NULL. For .ci = 95, .percentiles = c(0.025, 0.5, 0.975). For .ci =90, .percentiles will be c(0.05, 0.5, 0.95)}

\item{.na.rm}{Default is false}
}
\description{
Combines boot strap estimates and non boot strap estimates with information in parameter key. Performs
some formatting of this combined data.frame.
There are two main steps of this function:

1.Run \code{bbr::param_estimates_compare} to extract summary quantiles, the 5th, 50th, and 95th, of the
bootstrap estimates for each model parameter.
\itemize{
\item Some \code{parameter_names} have punctuation such as \code{OMEGA(1,1)}. A new column is
added without punctuation, such as \code{OMEGA11}.
\item Following this, parameter details from the parameter key are joined to the boot strap parameter estimates.
A \code{dplyr::inner_join} is used so that only parameters in the model output are kept
in the table. This was done so that, if your base and final model used the same structural
THETAs and random parameters, the same parameter key could be used for both.
\item This join adds the following columns: \code{abb} (abbreviation), \code{desc} (parameter description),
\code{panel}, \code{trans} (transformation).
}

With this information provided, a check is performed to determine whether parameters
with special transformation rules were defined correctly. In addition, a series of
TRUE/FALSE columns that will be used by subsequent functions.
}
\examples{

boot_paramEst <- utils::read.csv(system.file("model/nonmem/boot/data/boot-106.csv",
                                 package = "pmparams"))
paramKey <-  system.file("model/nonmem/pk-parameter-key-new.yaml", package = "pmparams")

define_boot_table(.boot_estimates = boot_paramEst,
               .key = paramKey)

}
